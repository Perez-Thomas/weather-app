{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/GitHub/weather-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport dateBuilder from \"./DateBuilder\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst weatherAPI = {\n  key: \"6bfb68468aecdf3f230fcdc9615a4160\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App(props) {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({}); // This function gets out weather\n\n  const search = event => {\n    if (event.key === \"Enter\") {\n      fetch(`${weatherAPI.base}weather?q=${query}&units=metric&APPID=${weatherAPI.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery(\"\");\n        console.log(result);\n      });\n    }\n  }; // Separate component created for dateBuilder\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"search-bar\",\n          type: \"text\",\n          placeholder: \"Search...\\uD83D\\uDD0D\",\n          onChange: e => setQuery(e.target.value),\n          value: query,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Weather App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Weather-Component\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"location\",\n              children: [weather.name, \", \", weather.sys.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: dateBuilder(new Date())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [Math.round(weather.main.temp * 1.8) + 32, \"\\xB0F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: weather.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: weather.weather[0].main.humidity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: [\"Min Temp:\", Math.round(weather.main.temp_min * 1.8 + 32)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: [\"Max Temp:\", weather.main.temp_max]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GVng0aXCH4yLtaeOWbs04pRRVUQ=\");\n\n_c = App;\nexport default App; // Add functionality so background image changes depending on weather\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["dateBuilder","React","useState","weatherAPI","key","base","App","props","query","setQuery","weather","setWeather","search","event","fetch","then","res","json","result","console","log","e","target","value","main","name","sys","country","Date","Math","round","temp","humidity","temp_min","temp_max"],"sources":["/Users/thomas/Documents/GitHub/weather-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport dateBuilder from \"./DateBuilder\";\nimport React, { useState } from \"react\";\n\nconst weatherAPI = {\n  key: \"6bfb68468aecdf3f230fcdc9615a4160\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nfunction App(props) {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  // This function gets out weather\n  const search = (event) => {\n    if (event.key === \"Enter\") {\n      fetch(\n        `${weatherAPI.base}weather?q=${query}&units=metric&APPID=${weatherAPI.key}`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result);\n          setQuery(\"\");\n          console.log(result);\n        });\n    }\n  };\n\n  // Separate component created for dateBuilder\n\n  return (\n    <div className=\"App\">\n      <main>\n        <div className=\"search-box\">\n          <input\n            className=\"search-bar\"\n            type=\"text\"\n            placeholder=\"Search...üîç\"\n            onChange={(e) => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n\n        <div className=\"App-title\">\n          <h1>Weather App</h1>\n        </div>\n\n        {/* ‚¨áÔ∏è CHANGE NAME FROM warm TO night ‚¨áÔ∏è*/}\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            <div className=\"Weather-Component\">\n              <div className=\"location-box\">\n                <div className=\"location\">\n                  {weather.name}, {weather.sys.country}\n                </div>\n                <div className=\"date\">{dateBuilder(new Date())}</div>\n              </div>\n              <div className=\"temp\">\n                {Math.round(weather.main.temp * 1.8) + 32}¬∞F\n              </div>\n              <div className=\"weather\">{weather.weather[0].main}</div>\n              <div className=\"weather\">{weather.weather[0].main.humidity}</div>\n              <div className=\"weather\">\n                Min Temp:{Math.round(weather.main.temp_min * 1.8 + 32)}\n              </div>\n              <div className=\"weather\">Max Temp:{weather.main.temp_max}</div>\n            </div>\n          </div>\n        ) : (\n          \" \"\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\n// Add functionality so background image changes depending on weather\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,UAAU,GAAG;EACjBC,GAAG,EAAE,kCADY;EAEjBC,IAAI,EAAE;AAFW,CAAnB;;AAKA,SAASC,GAAT,CAAaC,KAAb,EAAoB;EAAA;;EAClB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC,CAFkB,CAIlB;;EACA,MAAMU,MAAM,GAAIC,KAAD,IAAW;IACxB,IAAIA,KAAK,CAACT,GAAN,KAAc,OAAlB,EAA2B;MACzBU,KAAK,CACF,GAAEX,UAAU,CAACE,IAAK,aAAYG,KAAM,uBAAsBL,UAAU,CAACC,GAAI,EADvE,CAAL,CAGGW,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHjB,EAIGF,IAJH,CAISG,MAAD,IAAY;QAChBP,UAAU,CAACO,MAAD,CAAV;QACAT,QAAQ,CAAC,EAAD,CAAR;QACAU,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACD,CARH;IASD;EACF,CAZD,CALkB,CAmBlB;;;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAA,wBACE;QAAK,SAAS,EAAC,YAAf;QAAA,uBACE;UACE,SAAS,EAAC,YADZ;UAEE,IAAI,EAAC,MAFP;UAGE,WAAW,EAAC,uBAHd;UAIE,QAAQ,EAAGG,CAAD,IAAOZ,QAAQ,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ3B;UAKE,KAAK,EAAEf,KALT;UAME,UAAU,EAAEI;QANd;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAYE;QAAK,SAAS,EAAC,WAAf;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAZF,EAiBG,OAAOF,OAAO,CAACc,IAAf,IAAuB,WAAvB,gBACC;QAAA,uBACE;UAAK,SAAS,EAAC,mBAAf;UAAA,wBACE;YAAK,SAAS,EAAC,cAAf;YAAA,wBACE;cAAK,SAAS,EAAC,UAAf;cAAA,WACGd,OAAO,CAACe,IADX,QACmBf,OAAO,CAACgB,GAAR,CAAYC,OAD/B;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAIE;cAAK,SAAS,EAAC,MAAf;cAAA,UAAuB3B,WAAW,CAAC,IAAI4B,IAAJ,EAAD;YAAlC;cAAA;cAAA;cAAA;YAAA,QAJF;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAOE;YAAK,SAAS,EAAC,MAAf;YAAA,WACGC,IAAI,CAACC,KAAL,CAAWpB,OAAO,CAACc,IAAR,CAAaO,IAAb,GAAoB,GAA/B,IAAsC,EADzC;UAAA;YAAA;YAAA;YAAA;UAAA,QAPF,eAUE;YAAK,SAAS,EAAC,SAAf;YAAA,UAA0BrB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBc;UAA7C;YAAA;YAAA;YAAA;UAAA,QAVF,eAWE;YAAK,SAAS,EAAC,SAAf;YAAA,UAA0Bd,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBc,IAAnB,CAAwBQ;UAAlD;YAAA;YAAA;YAAA;UAAA,QAXF,eAYE;YAAK,SAAS,EAAC,SAAf;YAAA,wBACYH,IAAI,CAACC,KAAL,CAAWpB,OAAO,CAACc,IAAR,CAAaS,QAAb,GAAwB,GAAxB,GAA8B,EAAzC,CADZ;UAAA;YAAA;YAAA;YAAA;UAAA,QAZF,eAeE;YAAK,SAAS,EAAC,SAAf;YAAA,wBAAmCvB,OAAO,CAACc,IAAR,CAAaU,QAAhD;UAAA;YAAA;YAAA;YAAA;UAAA,QAfF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADD,GAqBC,GAtCJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA6CD;;GAlEQ5B,G;;KAAAA,G;AAoET,eAAeA,GAAf,C,CAEA"},"metadata":{},"sourceType":"module"}